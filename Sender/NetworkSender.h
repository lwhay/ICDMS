/**
 * @file NetworkSender.h
 * @date April 14, 2007
 * @brief The file declares the interface for NetworkSender.
 * @author Mingsheng Hong (mshong@cs.cornell.edu)
 */

#ifndef _NETWORK_SENDER_H
#define _NETWORK_SENDER_H

#include "Sender.h"

#include "../ICDSMSCE/PriorityQueue/FiFoQueue.h"
using Cayuga::FifoQueue;

#include <iostream>

namespace Cayuga {
namespace Sender {
class NetworkSenderServerThread;

/**
 * @brief A NetworkSender object sends data generated by Cayuga engine 
		  via TCP Socket asynchronously.
 * @author Mingsheng Hong (mshong@cs.cornell.edu)
 * @date April 14, 2007
 * @version 1.0
 */
class NetworkSender : Sender {
public:
	/**
	* @brief Default constructor
	* @param nPort The TCP port to listen to
	* @param senderName The Name of this sender
	* @param debugOut The debug message output stream
	* @author Mingsheng Hong (mshong@cs.cornell.edu)
	* @date April 15, 2007
	* @version 1.0
	*/
	NetworkSender(short nPort, const string& senderName, 
		ostream& debugOut = std::cout, const string& fAddr = "0");

	/**
	* @brief Destructor
	* @author Mingsheng Hong (mshong@cs.cornell.edu)
	* @date April 15, 2007
	* @version 1.0
	*/
	~NetworkSender();

	/**
	* @brief Send the input stream asynchronously.
	* @param str The input string to send out
	* @author Mingsheng Hong (mshong@cs.cornell.edu)
	* @date April 14, 2007
	* @version 1.0
	*/
	virtual void send(const string* str);
private:
	NetworkSenderServerThread* _pSenderServerThread;

	FifoQueue<string> _pMessageQueue;

}; //class NetworkSender
}  //namespace Receiver
}  //namespace Cayuga

#endif //_NETWORK_SENDER_H
